<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Redouane</title>
    <link>https://red0xff.github.io/posts/</link>
    <description>Recent content in Posts on Redouane</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 24 Apr 2019 09:27:58 +0200</lastBuildDate>
    
	<atom:link href="https://red0xff.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>When exploit mitigations are disabled on modern systems</title>
      <link>https://red0xff.github.io/posts/when_exploit_mitigations_are_disabled_on_modern_systems/</link>
      <pubDate>Wed, 24 Apr 2019 09:27:58 +0200</pubDate>
      
      <guid>https://red0xff.github.io/posts/when_exploit_mitigations_are_disabled_on_modern_systems/</guid>
      <description>Table of Contents  Introduction Prerequisites: Vulnerable program: Vulnerability Analysis of the executable Exploitation  Initial plan Searching for ROP gadgets in the application Implementing the exploit  Part1 - Initial Buffer overflow, stack pivoting Part2 - VirtualProtect the main module to ERW, scanf on ERW memory, and jump to it: Part3 - Final shellcode Putting it all together     Conclusion  Introduction While experimenting with the Windows exploit mitigation policies, I noticed that MinGW-GCC does not enable most of the modern protections by default.</description>
    </item>
    
    <item>
      <title>NFSMW2012 : making opponents fly</title>
      <link>https://red0xff.github.io/posts/nfsmw2012_making_opponents_fly/</link>
      <pubDate>Sat, 20 Jan 2018 00:00:00 +0200</pubDate>
      
      <guid>https://red0xff.github.io/posts/nfsmw2012_making_opponents_fly/</guid>
      <description>This is a gamehacking tutorial targeting Need for Speed Most Wanted 2012.

In this tutorial, I will register a hotkey that when pressed, will raise all the opponents by 20m to the sky (and by opponents I mean both cops and race opponents), lets start :D
We&amp;rsquo;ll start by searching for the z coordinate of our car (a value that indicates its height), we must keep in mind that the z axis might be inverted (ie.</description>
    </item>
    
  </channel>
</rss>